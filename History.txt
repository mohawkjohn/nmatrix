=== 0.0.1 / 2012-04-10

* 1 major enhancement

  * Initial alpha release

=== 0.0.2 / 2012-09-21

* 15 major enhancements

  * Second alpha release

  * Rewrote NMatrix in C++0x and C++11 using templates, namespaces;
    removed Ruby generators and CAST parser

  * Added preliminary C API

  * Slicing and referencing support for dense and list matrices (by
    @flipback)

  * BLAS level-3 xTRSM algorithm added for rationals and BLAS types

  * LAPACK support added, including partially working xGETRF
    subroutine

  * Element-wise comparisons now return byte-matrices

  * Element-wise operations on list matrices may alter the default
    value of the return matrix

  * Element-wise division behaves like Ruby division

  * Improved MATLAB .MAT v5 file reading

  * clang support

  * `==` operator now used for matrix equality, `=~` and `!~` for
    element-wise comparisons

  * Dense `each` returns an Enumerator when called without a block

  * Sped up list storage item deletion, fixed bugs

  * List matrix-to-hash conversion with `to_h`

* Note: Element-wise list operations current disabled

=== 0.0.3 / 2013-01-18

* 8 major enhancements

  * Matrix-scalar operations (dense, list)

  * Shortcuts for matrix creation (by @agarie)

  * Access to most ATLAS-implemented LAPACK functions for those
    with ATLAS' CLAPACK interface: xGETRF, xGETRI, xGETRS, xGESV,
    xPOTRF, xPOTRI, xPOTRS, xPOSV, xLASWP, xSCAL, xLAUUM

  * Access to additional ATLAS-implemented BLAS functions: xTRMM,
    xSYRK, xHERK, xROT, xROTG

  * Non-ATLAS versions of CLAPACK functions: xLASWP, xSCAL, xLAUUM,
    xROT

  * Matrix inversion (LU and Cholesky; requires CLAPACK)

  * LU factoring with and without CLAPACK

  * Native matrix I/O for dense (supporting upper, lower, hermitian,
    skew, symmetric, and general) and yale (general only); excludes
    Ruby objects currently

* 2 bug fixes:

  * Yale-to-list casting

  * Now requires packable-1.3.5 or higher, fixing a problem with MATLAB
    .mat v5 file I/O (specific to doubles)

=== 0.0.4 / 2013-05-17

* 3 major enhancements

  * Added a more user-friendly interface for cblas_rot in the form of
    NMatrix::BLAS::rot

  * Added to_hash for Yale matrices

  * Improved source code documentation (by @agarie)

* 4 minor enhancements

  * Spec clean-up (by @masaomi)

  * Made it possible to request a different itype internally for Yale
    matrices

  * Improved space usage of Yale slice-by-copying, which was requesting
    more space than needed

  * Improved compile-time Mac OS X and Ubuntu library searching

* 8 bug fixes:

  * NMatrix::BLAS::gemv segfaults

  * Fixed Yale matrix slice-by-copy write error where default itypes
    (which are based on shape) differ, and a separate problem where
    incorrect IJA and A entries were written.

  * NVector-scalar operations and NVector-NVector element-wise options
    now return an NVector instead of an NMatrix

  * Addressed problems with segmentation faults during iteration (by
    @cjfuller)

  * Addressed Ubuntu/Debian installation problems (incompatibility with
    apt-supplied atlas)

  * Fixed transpose behavior following slice-by-reference (by @cjfuller)

  * Fixed gem install command in Rakefile (by @jpmckinney)

  * Fixed Spanish language compile issue (by @imcsk8 and @agarie)

=== 0.0.5 / 2013-??-??

* 3 major enhancements

  * NVector orientation is now controlled by its shape, not by the
    @orientation property

  * NVector default orientation is now a row vector rather than a
    column, as this is more efficient for Yale storage

  * NVector objects may now be created with dtypes other than dense

* 9 minor enhancements

  * Added #yale_vector_insert to NMatrix::YaleFunctions, to speed up
    insertion of multiple items into a Yale matrix

  * Added #yale_nd_row, #yale_nd_row_as_hash, #yale_nd_row_as_array,
    #yale_nd_row_as_set, #yale_nd_row_as_sorted_set, #yale_row,
    #yale_row_as_hash, #yale_row_as_array, #yale_row_as_set,
    #yale_row_as_sorted_set, #yale_nd_row_size to NMatrix::YaleFunctions
    in order to speed up getting multiple items from some row of a Yale
    matrix

  * Improved #yale_ija, #yale_a, #yale_d by allowing an optional index
    argument, which returns a single array value instead of copying and
    returning the entire array

  * Improved sorting algorithm for Yale matrix multiplication; instead
    of selection sort, now uses quicksort; and subs in insertion sort
    for small partitions

  * Slicing a single row or column now returns an NVector instead
    of an NMatrix (does not yet work for n-dimensional matrices)

  * Improved function documentation for NVector and NMatrix

  * Added #min, #max, #to_a, #shuffle, #shuffle! functions to NVector

  * Aliased missing dimension of NVector#each_stored_with_indices to
    #each_stored_with_index, which only yields a value and i or j
    (not both i and j) depending on the vector orientation

  * Added #each_row, #each_column to NMatrix

* 5 bug fixes:

  * Dense iterators now return self (an NMatrix) in order to be
    consistent with Ruby Array behavior (by @cjfuller)

  * NMatrix#pretty_print now properly prints #inspect when matrix
    is too large to be cleanly printed

  * Fixed Yale resize problem (by @v0dro)

  * Fixed Yale nx1 times 1xn multiplication problem

  * Fixed Yale sorting-following-multiplication problem
